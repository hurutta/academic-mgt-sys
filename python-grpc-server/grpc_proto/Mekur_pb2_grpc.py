# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from grpc_proto import Mekur_pb2 as grpc__proto_dot_src_dot_main_dot_proto_dot_Mekur__pb2


class StudentServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getStudentById = channel.unary_unary(
                '/com.example.grpcproto.v1.StudentService/getStudentById',
                request_serializer=grpc__proto_dot_src_dot_main_dot_proto_dot_Mekur__pb2.StudentRequest.SerializeToString,
                response_deserializer=grpc__proto_dot_src_dot_main_dot_proto_dot_Mekur__pb2.StudentResponse.FromString,
                )
        self.registerStudent = channel.unary_unary(
                '/com.example.grpcproto.v1.StudentService/registerStudent',
                request_serializer=grpc__proto_dot_src_dot_main_dot_proto_dot_Mekur__pb2.RegisterStudentRequest.SerializeToString,
                response_deserializer=grpc__proto_dot_src_dot_main_dot_proto_dot_Mekur__pb2.StudentResponse.FromString,
                )
        self.deleteStudentById = channel.unary_unary(
                '/com.example.grpcproto.v1.StudentService/deleteStudentById',
                request_serializer=grpc__proto_dot_src_dot_main_dot_proto_dot_Mekur__pb2.StudentRequest.SerializeToString,
                response_deserializer=grpc__proto_dot_src_dot_main_dot_proto_dot_Mekur__pb2.StudentResponse.FromString,
                )
        self.getAllStudent = channel.unary_unary(
                '/com.example.grpcproto.v1.StudentService/getAllStudent',
                request_serializer=grpc__proto_dot_src_dot_main_dot_proto_dot_Mekur__pb2.EmptyRequest.SerializeToString,
                response_deserializer=grpc__proto_dot_src_dot_main_dot_proto_dot_Mekur__pb2.AllStudentResponse.FromString,
                )


class StudentServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getStudentById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def registerStudent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteStudentById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAllStudent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StudentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getStudentById': grpc.unary_unary_rpc_method_handler(
                    servicer.getStudentById,
                    request_deserializer=grpc__proto_dot_src_dot_main_dot_proto_dot_Mekur__pb2.StudentRequest.FromString,
                    response_serializer=grpc__proto_dot_src_dot_main_dot_proto_dot_Mekur__pb2.StudentResponse.SerializeToString,
            ),
            'registerStudent': grpc.unary_unary_rpc_method_handler(
                    servicer.registerStudent,
                    request_deserializer=grpc__proto_dot_src_dot_main_dot_proto_dot_Mekur__pb2.RegisterStudentRequest.FromString,
                    response_serializer=grpc__proto_dot_src_dot_main_dot_proto_dot_Mekur__pb2.StudentResponse.SerializeToString,
            ),
            'deleteStudentById': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteStudentById,
                    request_deserializer=grpc__proto_dot_src_dot_main_dot_proto_dot_Mekur__pb2.StudentRequest.FromString,
                    response_serializer=grpc__proto_dot_src_dot_main_dot_proto_dot_Mekur__pb2.StudentResponse.SerializeToString,
            ),
            'getAllStudent': grpc.unary_unary_rpc_method_handler(
                    servicer.getAllStudent,
                    request_deserializer=grpc__proto_dot_src_dot_main_dot_proto_dot_Mekur__pb2.EmptyRequest.FromString,
                    response_serializer=grpc__proto_dot_src_dot_main_dot_proto_dot_Mekur__pb2.AllStudentResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.example.grpcproto.v1.StudentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class StudentService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getStudentById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.example.grpcproto.v1.StudentService/getStudentById',
            grpc__proto_dot_src_dot_main_dot_proto_dot_Mekur__pb2.StudentRequest.SerializeToString,
            grpc__proto_dot_src_dot_main_dot_proto_dot_Mekur__pb2.StudentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def registerStudent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.example.grpcproto.v1.StudentService/registerStudent',
            grpc__proto_dot_src_dot_main_dot_proto_dot_Mekur__pb2.RegisterStudentRequest.SerializeToString,
            grpc__proto_dot_src_dot_main_dot_proto_dot_Mekur__pb2.StudentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteStudentById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.example.grpcproto.v1.StudentService/deleteStudentById',
            grpc__proto_dot_src_dot_main_dot_proto_dot_Mekur__pb2.StudentRequest.SerializeToString,
            grpc__proto_dot_src_dot_main_dot_proto_dot_Mekur__pb2.StudentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getAllStudent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.example.grpcproto.v1.StudentService/getAllStudent',
            grpc__proto_dot_src_dot_main_dot_proto_dot_Mekur__pb2.EmptyRequest.SerializeToString,
            grpc__proto_dot_src_dot_main_dot_proto_dot_Mekur__pb2.AllStudentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
